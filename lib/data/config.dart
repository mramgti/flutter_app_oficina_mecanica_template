class Config{
  static const String sql = '''
      -- TABLE TipoStatus
CREATE TABLE IF NOT EXISTS TipoStatus (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Status VARCHAR(45) NOT NULL
);

-- TABLE TipoFuncionario
CREATE TABLE IF NOT EXISTS TipoFuncionario (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Nome VARCHAR(80) NOT NULL
);

-- TABLE TipoPecaServico
CREATE TABLE IF NOT EXISTS TipoPecaServico (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Nome VARCHAR(80)
);

-- TABLE TipoPagamento
CREATE TABLE IF NOT EXISTS TipoPagamento (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Descricao VARCHAR(45)
);

-- TABLE OrdemServico
CREATE TABLE IF NOT EXISTS OrdemServico (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CodTipoStatus INTEGER,
    DataHoraEntregaVeiculo DATETIME,
    DataHoraInicioServico DATETIME,
    DataHoraFimServico DATETIME,
    Quilometragem INTEGER,
    FOREIGN KEY (CodTipoStatus) REFERENCES TipoStatus(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

-- TABLE Clientes
CREATE TABLE IF NOT EXISTS Clientes (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CPF CHAR(11) NOT NULL,
    Nome VARCHAR(80) NOT NULL,
    Email VARCHAR(45),
    DataNascimento DATE,
    DataCadastro DATE,
    CodOrdemServico INTEGER,
    FOREIGN KEY (CodOrdemServico) REFERENCES OrdemServico(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE Veiculos
CREATE TABLE IF NOT EXISTS Veiculos (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Placa CHAR(7) NOT NULL,
    Marca VARCHAR(45),
    Modelo VARCHAR(45),
    Cor VARCHAR(45),
    Ano INTEGER
);

-- TABLE Funcionarios
CREATE TABLE IF NOT EXISTS Funcionarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CPF CHAR(11) NOT NULL,
    Nome VARCHAR(80) NOT NULL,
    DataContratacao DATE NOT NULL,
    DataDemissao DATE,
    DataNascimento DATE,
    Salario DECIMAL(8,2),
    DataAtribuicao DATE,
    Senha VARCHAR(80) NOT NULL,
    CodTipoFuncionario INTEGER,
    FOREIGN KEY (CodTipoFuncionario) REFERENCES TipoFuncionario(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE EstoquePecaServico
CREATE TABLE IF NOT EXISTS EstoquePecaServico (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Nome VARCHAR(80),
    PrecoCompra DECIMAL(8,2),
    PrecoVenda DECIMAL(8,2),
    Quantidade INTEGER,
    CodTipoPecaServico INTEGER,
    FOREIGN KEY (CodTipoPecaServico) REFERENCES TipoPecaServico(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE Fornecedor
CREATE TABLE IF NOT EXISTS Fornecedor (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CNPJ CHAR(14) NOT NULL,
    Nome VARCHAR(80) NOT NULL,
    DataCadastro DATE
);

-- TABLE Endereco
CREATE TABLE IF NOT EXISTS Endereco (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Rua VARCHAR(100),
    Numero VARCHAR(45),
    Complemento VARCHAR(45),
    Bairro VARCHAR(45),
    Cidade VARCHAR(45),
    Estado CHAR(2),
    CEP CHAR(8),
    PontoReferencia VARCHAR(45),
    Telefone CHAR(12),
    CPF CHAR(11),
    CNPJ CHAR(14),
    FOREIGN KEY (CPF) REFERENCES Clientes(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CNPJ) REFERENCES Fornecedor(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE Veiculos_Clientes
CREATE TABLE IF NOT EXISTS Veiculos_Clientes (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Placa CHAR(7),
    CPF CHAR(11),
    FOREIGN KEY (Placa) REFERENCES Veiculos(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CPF) REFERENCES Clientes(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE OrdemServico_Veiculos
CREATE TABLE IF NOT EXISTS OrdemServico_Veiculos (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Placa CHAR(7),
    CodOrdemServico INTEGER,
    FOREIGN KEY (Placa) REFERENCES Veiculos(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CodOrdemServico) REFERENCES OrdemServico(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE OrdemServico_Servico
CREATE TABLE IF NOT EXISTS OrdemServico_Servico (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CodOrdemServico INTEGER,
    CodServico INTEGER,
    CPF CHAR(11),
    FOREIGN KEY (CodOrdemServico) REFERENCES OrdemServico(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CodServico) REFERENCES EstoquePecaServico(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CPF) REFERENCES Funcionarios(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE OrdemServico_Pagamentos
CREATE TABLE IF NOT EXISTS OrdemServico_Pagamentos (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CodOrdemServico INTEGER,
    CodTipoPagamento INTEGER,
    NumParcelas INTEGER,
    ValorPago DECIMAL(8,2),
    FOREIGN KEY (CodOrdemServico) REFERENCES OrdemServico(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CodTipoPagamento) REFERENCES TipoPagamento(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE OrdemServico_EstoquePecas
CREATE TABLE IF NOT EXISTS OrdemServico_EstoquePecas (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CodOrdemServico INTEGER,
    CodPeca INTEGER,
    CPF CHAR(11),
    ValorPeca DECIMAL(8,2),
    QuantPeca INTEGER,
    FOREIGN KEY (CodOrdemServico) REFERENCES OrdemServico(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CodPeca) REFERENCES EstoquePecaServico(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CPF) REFERENCES Funcionarios(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- TABLE Fornecedor_EstoquePecas
CREATE TABLE IF NOT EXISTS Fornecedor_EstoquePecas (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CNPJ CHAR(14),
    CodPeca INTEGER,
    FOREIGN KEY (CNPJ) REFERENCES Fornecedor(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (CodPeca) REFERENCES EstoquePecaServico(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

  ''';
}